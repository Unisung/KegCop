Hey Chris, I'm back.

I saw your question at stackoverflow, but I don't think I understand correctly. You should be able to create a new instance of Account doing something like:

Account *account = [NSEntityDescription insertNewObjectForEntityForName:@"Account" inManagedObjectContext:yourContextVariable];

By the time you do that, the entry has already been created in your managed object context, so to set the values of the account you would just fill its properties, like:

account.email = some string

Your changes in the managed object context are not "flushed" so to speak until you call [yourContextVariable save] though.

Not sure if that's where you were stuck at.

   
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    // CORE DATA - APPLE EXAMPLE
    NSManagedObjectContext *context = _managedObjectContext;
    
    NSEntityDescription *entity = [NSEntityDescription entityForName:@"Account" inManagedObjectContext:context];
    
    NSFetchRequest *request = [[NSFetchRequest alloc] init];
    
    [request setEntity:entity];
    
    [request setResultType:NSDictionaryResultType];
    
    [request setReturnsDistinctResults:YES];
    
    [request setPropertiesToFetch :[NSArray arrayWithObject:@"username"]];
    
    // Execute the fetch.
    
    NSError *error;
    
    id requestedValue = nil;
    
    NSArray *objects = [_managedObjectContext executeFetchRequest:request error:&error];
    
    if (objects == nil) {
        
        NSLog(@"objects are set to nil.");
    }
   
   
   
   
   
   
   
   
   
   
   
   // NSError *error = nil;
    //NSArray *users = [_managedObjectContext executeFetchRequest:fetchRequest error:&error];
    
    
    
    
    // Set up a predicate (or search criteria) for checking the username
    //NSPredicate *pred = [NSPredicate predicateWithFormat:@"(username == %@)", [_textFieldUsername text]];
    
    // check if _textFieldPin matches pin stored in keychain
   
    // if ([pin = *password]);
                          
                          
    // - (NSString*)password 
    
    
    /*
    NSString *inputKey = _textFieldPin.text;
    NSString *password = [KeychainHelper getPasswordForKey:inputKey];
    if ([password isEqualToString:inputKey]) {
        NSLog(@"password matches stored pin");
    }
    else {
        [_wrongUserPin setHidden:NO];
    }
    */
    
    //+ (NSString*)getPasswordForKey:(NSString*)aKey;
    
    
    // Actually run the query in Core Data and return the count of found users with these details
    // Obviously if it found ANY then we got the username right!
    
    
    
    // check if username and pin are a match
    
    /*
    // check if username = root
    NSString *string = @"root";
    // get the value inputted in textFieldUsername and put it in a string object.
    NSString *tf_Username = [_textFieldUsername text ];
    
    // compare "root" with tf_Username
    if ([string isEqualToString: tf_Username])  {
        // load root Welcome Screen
        [self performSegueWithIdentifier:@"AdminSegue" sender:sender];
    }
    else {
        // load user Welcome screen
        [self performSegueWithIdentifier:@"UserSegue" sender: sender];
    }
    */
    
    
     /*
    // fetch request
    NSFetchRequest *fetchRequest = [[NSFetchRequest alloc] init];
    // fetchRequest.entity = [NSEntityDescription entityForName:@"Account" inManagedObjectContext:_managedObjectContext];
    fetchRequest.predicate = [NSPredicate predicateWithFormat:@"self.name == %@", inputUser];
    fetchRequest.fetchLimit = 1;
     */
     
     
     
     // APPLE EXAMPLE
     
     
     NSManagedObjectContext *context = _managedObjectContext;
    
    NSEntityDescription *entity = [NSEntityDescription entityForName:@"Account" inManagedObjectContext:context];
    
    NSFetchRequest *request = [[NSFetchRequest alloc]init];
    
    [request setEntity:entity];
    
    [request setResultType:NSDictionaryResultType];
    
    [request setReturnsDistinctResults:YES];
    
    [request setPropertiesToFetch :[NSArray arrayWithObject:@"username"]];
    
    // Execute the fetch.
    
    NSError *error;
    
    id requestedValue = nil;
    
    NSArray *objects = [_managedObjectContext executeFetchRequest:request error:&error];
    
    
    
